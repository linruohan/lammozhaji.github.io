if(typeof AWPageMounts=='undefined'){AWPageMounts={}};AWPageMounts['m0']=[{"name":"26-VMware 15 上Mac虚拟机卡顿.md","path":"0-code环境配置/0-Vmware虚拟机安装macos/26-VMware 15 上Mac虚拟机卡顿.md","content":"VMware 15 上Mac虚拟机卡顿情况的优化\r\n原创爱你的铁锤妹妹 发布于2019-04-14 14:30:39 阅读数 10765  收藏\r\n展开\r\n在我上一篇博客 https://blog.csdn.net/SSS_Benjamin/article/details/89293862 中安好虚拟机之后，发现运行起来卡的一批。。。毕竟不是黑苹果也不是白苹果hhh\r\n总结一下优化的几个小方法~\r\n1.增加虚拟机的内存\r\n在虚拟机设置中适量增加Mac虚拟机的内存，不做过多解释啦\r\n\r\n2.减少透明度\r\n打开系统设置，在【偏好设置】中的显示器部分选中“减少透明度”\r\n\r\n3.更改动画效果\r\n打开系统设置，在【Dock】中将最小化窗口时的动画效果改为缩放效果会流畅一点\r\n\r\n\r\n4.安装beamoff 划重点\r\nbeamoff是VM上Mac虚拟机的优化神器，github地址：https://github.com/JasF/beamoff\r\n\r\n安装方法\r\n在虚拟机中用浏览器打开 https://raw.githubusercontent.com/S-Benjamin/Beamoff/master/beamoff.zip 这个链接，或者在虚拟机的浏览器中打开本篇博文直接点击这个链接，自动下载beamoff，下载完成后在Finder中打开，拖动下载好的文件到左侧栏中的【应用程序】中\r\n\r\n设置为开机启动\r\n打开系统设置的【用户与群组】，左侧栏中点击自己的账户，在右边的登录项中添加beamoff即可\r\n------------------------------------------------\r\n版权声明：本文为CSDN博主「爱你的铁锤妹妹」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\r\n原文链接：https://blog.csdn.net/SSS_Benjamin/article/details/89296164\r\n","timestamp":1590329650947},{"name":"27-VMware Workstation 与 DeviceCredential Guard 不兼容.在禁用 DeviceCredenti.md","path":"0-code环境配置/0-Vmware虚拟机安装macos/27-VMware Workstation 与 DeviceCredential Guard 不兼容.在禁用 DeviceCredenti.md","content":"# [VMware Workstation 与 Device/Credential Guard 不兼容.在禁用 Device/Credenti](https://www.cnblogs.com/lwqforit/p/11969602.html)\r\n\r\n# 出现问题的原因：\r\n\r\n#### 原因一、出现此问题的原因是Device Guard或Credential Guard与Workstation不兼容。\r\n\r\n#### 原因二、Windows系统的Hyper-V不兼容导致。\r\n\r\n# 解决方案：\r\n\r\n#### 第一步：\r\n\r\n**“win+ R“打开运行，输入gpedit.msc，确定打开本地组策略编辑器\r\n转到本地计算机策略 > 计算机配置 > 管理模板>系统 > Device Guard\r\n打开 基于虚拟化的安全设置为“已禁用”**\r\n![win+ R“打开运行，输入gpedit.msc](D:\\Typora_pic\\1886079-20191202092704662-1502577759.png)\r\n![Device Guard位置](D:\\Typora_pic\\1886079-20191202094625316-532505387.png)\r\n![Device Guard禁用](D:\\Typora_pic\\1886079-20191202094912010-986441575.png)\r\n\r\n#### 第二步：\r\n\r\n**“win+ R“打开运行，输入services.msc，确定打开本地服务 > 找到HV主机服务 > 启动类型设置为“禁用”**\r\n![“win+ R“打开运行，输入services.msc](D:\\Typora_pic\\1886079-20191202095756922-1570248113.png)\r\n![HV主机服务](D:\\Typora_pic\\1886079-20191202095901693-1819133381.png)\r\n![启动类型设置为“禁用”](D:\\Typora_pic\\1886079-20191202100030774-744159554.png)\r\n\r\n#### 第三步：\r\n\r\n**“ 控制面板” >“ 卸载程序” >“ 打开或关闭Windows功能”以关闭Hyper-V，选择不重启**\r\n![关闭Hyper-V](D:\\Typora_pic\\1886079-20191202100616277-1689270475.png)\r\n\r\n#### 第四步：\r\n\r\n**通过命令关闭Hyper-V（控制面板关闭Hyper-V起不到决定性作用）\r\n“win+ x”,然后运行以管理员身份运行Windows Powershell (管理员)\r\n也可以选择“cmd” 以管理员身份运行**\r\n\r\n```\r\nbcdedit /set hypervisorlaunchtype off\r\n```\r\n\r\n![win+ x 命令](D:\\Typora_pic\\1886079-20191202112304854-691289718.jpg)\r\n![运行成功](D:\\Typora_pic\\1886079-20191202112559093-476370722.png)\r\n\r\n#### 第五步：\r\n\r\n**重启电脑**","timestamp":1590329650947},{"name":"28-VMware下安装的Mac OS X如何修改显示分辨率 .md","path":"0-code环境配置/0-Vmware虚拟机安装macos/28-VMware下安装的Mac OS X如何修改显示分辨率 .md","content":"# [VMware下安装的Mac OS X如何修改显示分辨率 (转)](https://www.cnblogs.com/jerrybaby/p/6908664.html)\r\n\r\n我在Win7下利用VMware安装了苹果的OS x 10.8系统，安装成功启动后，发现分辨率为1024*768，而宿机的分辨率是1440*900，我想让虚拟机全屏显示，也就是想在雪豹下屏幕的分辨率也能达到1440*900大小。在网上找了些资料，试了几次还真成功了，下面是设置过程（以下操纵均在虚拟机上完成）： \r\n\r\n　　1. 打开Finder，点“位置->应用程序->实用工具->终端”，如下图： \r\n\r\n　　2. 在终端窗口内输进sudo -s后回车，接着输进治理员密码，再回车： \r\n\r\n```shell\r\nvi /Library/Preferences/SystemConfiguration/com.apple .Boot.plist \r\n# 输进900表示屏幕分辨率，60表示刷新率。 \r\n<key>Graphics Mode</key>;\r\n<string>1440*900@60</string>,\r\n\r\n```\r\n\r\n　　9. reboot\r\n\r\n然后在虚拟机设置中勾选3D图形并手动选择分辨率，设置完成后再次开机进入全屏试试看喽。\r\n\r\n[![VMware安装苹果系统后如何修改分辨率](D:\\Typora_pic\\27591-4.png)](https://img.lancdn.com/landian/2016/11/27591-4.png)","timestamp":1590329650947},{"name":"29-VMware虚拟机安装macOS系统.md","path":"0-code环境配置/0-Vmware虚拟机安装macos/29-VMware虚拟机安装macOS系统.md","content":"很多朋友需要临时体验一下macOS, 但又没有苹果电脑. 现在分享一下在普通PC电脑上使用VMware虚拟机安装macOS系统的方法.\r\n\r\n# 一、准备工作\r\n\r\n- 1, 一台普通电脑, 系统要求Windows 7或以上.\r\n\r\n- 2, 这台电脑的CPU要求支持虚拟化.(无需担心, 现在的CPU基本上都支持).\r\n\r\n- 3, VMware Workstation虚拟机软件, 可以在这里下载https://www.applex.net/downloads/vmware-workstation-full-15-0-2.903/\r\n- 4, 因为默认的VMware不支持安装macOS, 所以还需要一个解锁工具 macOS Unlockerhttps://www.applex.net/downloads/macos-unlocker-v3-0-2-for-vmware.902/\r\n- 5, 苹果macOS系统镜像 CDR/ISO格式.https://www.applex.net/pages/macos/\r\n\r\n# 二、安装流程\r\n\r\n1, 先下载并安装最新的VMware Workstation虚拟机.==(不要运行)==\r\n\r\n2, 下载解锁工具 macOS Unlocker, 解压后右键以管理员模式运行unlocker\\win-install.cmd.\r\n\r\n正常运行解锁补丁的同时会自动下载darwin.iso.\r\n\r\n 若下载失败可以手动下载\r\n http://softwareupdate.vmware.com/cds/vmw-desktop/fusion/\r\n 在最新的目录下packages里下载com.vmware.fusion.tools.darwin.zip.tar\r\n 然后解压, 再把darwin.iso文件复制到VMware的安装目录里面.\r\n\r\n 目前最新的版本为\r\n [http://softwareupdate.vmware.com/cd...ckages/com.vmware.fusion.tools.darwin.zip.tar](http://softwareupdate.vmware.com/cds/vmw-desktop/fusion/11.0.2/10952296/packages/com.vmware.fusion.tools.darwin.zip.tar)\r\n\r\n3, 解锁完成后运行VMware Workstation虚拟机, 选择新建虚拟机.\r\n\r\n典型(推荐)--安装来用选择iso映像文件--选择Apple Mac OS X, 并选择合适的版本.\r\n\r\n![[IMG]](https://s2.ax1x.com/2019/01/27/kKUbdJ.md.png)\r\n\r\n![[IMG]](https://s2.ax1x.com/2019/01/27/kKUIMT.md.png)\r\n\r\n![[IMG]](https://s2.ax1x.com/2019/01/27/kKanOS.md.png)\r\n\r\n![[IMG]](https://s2.ax1x.com/2019/01/27/kKdPXT.md.png)\r\n\r\n记得自定义硬件.\r\n\r\n用光驱加载之前下载的iso文件\r\n\r\n![[IMG]](https://s2.ax1x.com/2019/02/21/kRVHnU.md.png)\r\n\r\n![[IMG]](https://s2.ax1x.com/2019/02/21/kRVbBF.md.png)\r\n\r\n![[IMG]](https://s2.ax1x.com/2019/02/21/kRVjhR.md.png)\r\n\r\n![[IMG]](https://s2.ax1x.com/2019/02/21/kRVx91.md.png)\r\n\r\n 设置好后启动驱动, 然后进系统安装页面.\r\n\r\n  若无法启动可以尝试用记事本等文件编辑工具打开虚拟机文件.vmx, 在最后面加上\r\n\r\n```shell\r\nsmc.version = \"0\"\r\n```\r\n\r\n 进入磁盘工具, 先抹掉硬盘\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKdRg0.md.png)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwPPA.md.jpg)\r\n\r\n 抹掉硬盘后退出磁盘工具, 安装macOS.\r\n\r\n 选择安装到刚刚的Macintosh HD硬盘上, 安装过程中可能会有几次自动重启\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwl2q.md.png)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKw1x0.md.png)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKw8MV.md.png)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwJqU.md.png)\r\n\r\n \r\n\r\n最后编辑: 2019-01-28\r\n\r\n 已获得 [JackJames](https://www.applex.net/members/jackjames.157208/) 和 [deardeer8857](https://www.applex.net/members/deardeer8857.195794/) 的点赞。\r\n\r\n[![Bill](https://www.applex.net/data/avatars/m/0/3.jpg?1369036655)](https://www.applex.net/members/bill.3/)\r\n\r\n### [Bill](https://www.applex.net/members/bill.3/)*老牛****管理成员***\r\n\r\n- 注册:\r\n\r\n  2010-11-01\r\n\r\n- 帖子:\r\n\r\n  [3,646](https://www.applex.net/search/member?user_id=3)\r\n\r\n\r\n\r\n[2019-01-27](https://www.applex.net/threads/pc-vmware-macos.92998/#post-146661)[#3](https://www.applex.net/threads/pc-vmware-macos.92998/#post-146661)\r\n\r\n 安装完成后需要进行一些初始化设置\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwwGR.md.png)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwdi9.md.png)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwBxx.md.jpg)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwbdg.md.png)\r\n\r\n 进入桌面后还有一个重要步骤, 那就是安装VMware Tools\r\n\r\n 点击顶部虚拟机-安装VMware tools, 再根据提示继续安装.\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKw4zt.md.png)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwXJs.md.jpg)\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/01/27/kKwhRI.md.png)\r\n\r\n \r\n\r\n最后编辑: 2019-01-27\r\n\r\n 已获得 [wdxnzhh](https://www.applex.net/members/wdxnzhh.181751/) 和 [王爷112](https://www.applex.net/members/112.178634/) 的点赞。\r\n\r\n[![Bill](https://www.applex.net/data/avatars/m/0/3.jpg?1369036655)](https://www.applex.net/members/bill.3/)\r\n\r\n### [Bill](https://www.applex.net/members/bill.3/)*老牛****管理成员***\r\n\r\n- 注册:\r\n\r\n  2010-11-01\r\n\r\n- 帖子:\r\n\r\n  [3,646](https://www.applex.net/search/member?user_id=3)\r\n\r\n\r\n\r\n[2019-01-27](https://www.applex.net/threads/pc-vmware-macos.92998/#post-146663)[#4](https://www.applex.net/threads/pc-vmware-macos.92998/#post-146663)\r\n\r\n VMware 15.0 + macOS 10.14.x\r\n\r\n VMware 15.5 + macOS 10.15.x\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/10/20/KQiFuF.md.png)\r\n\r\n \r\n\r\n最后编辑: 2019-10-20\r\n\r\n[![yuyinbiao](https://www.applex.net/styles/xf2/xenforo/avatars/avatar_m.png)](https://www.applex.net/members/yuyinbiao.142690/)\r\n\r\n### [**yuyinbiao**](https://www.applex.net/members/yuyinbiao.142690/)*VIP会员*\r\n\r\n- 注册:\r\n\r\n  2019-01-21\r\n\r\n- 帖子:\r\n\r\n  [2](https://www.applex.net/search/member?user_id=142690)\r\n\r\n\r\n\r\n[2019-02-03](https://www.applex.net/threads/pc-vmware-macos.92998/#post-146890)[#5](https://www.applex.net/threads/pc-vmware-macos.92998/#post-146890)\r\n\r\n 点赞\r\n\r\n \r\n\r\n[![yutong2310](https://www.applex.net/styles/xf2/xenforo/avatars/avatar_m.png)](https://www.applex.net/members/yutong2310.144699/)\r\n\r\n### [**yutong2310**](https://www.applex.net/members/yutong2310.144699/)*VIP会员*\r\n\r\n- 注册:\r\n\r\n  2019-02-18\r\n\r\n- 帖子:\r\n\r\n  [5](https://www.applex.net/search/member?user_id=144699)\r\n\r\n\r\n\r\n[2019-03-12](https://www.applex.net/threads/pc-vmware-macos.92998/#post-148511)[#6](https://www.applex.net/threads/pc-vmware-macos.92998/#post-148511)\r\n\r\n 这种啥情况大佬？\r\n\r\n ![[IMG]](https://s2.ax1x.com/2019/03/12/AP2P9H.md.png)\r\n\r\n \r\n\r\n[![yutong2310](https://www.applex.net/styles/xf2/xenforo/avatars/avatar_m.png)](https://www.applex.net/members/yutong2310.144699/)\r\n\r\n### [**yutong2310**](https://www.applex.net/members/yutong2310.144699/)*VIP会员*\r\n\r\n- 注册:\r\n\r\n  2019-02-18\r\n\r\n- 帖子:\r\n\r\n  [5](https://www.applex.net/search/member?user_id=144699)\r\n\r\n\r\n\r\n[2019-03-12](https://www.applex.net/threads/pc-vmware-macos.92998/#post-148513)[#7](https://www.applex.net/threads/pc-vmware-macos.92998/#post-148513)\r\n\r\n 作者: yutong2310: [↑](https://www.applex.net/goto/post?id=148511#post-148511)\r\n\r\n  这种啥情况大佬？\r\n\r\n  [![[IMG\\]](https://s2.ax1x.com/2019/03/12/AP2P9H.md.png)](https://imgchr.com/i/AP2P9H)\r\n\r\n  点击展开...\r\n\r\n 使用10.3的会无限重启，添加一下cpuid.1.eax = \"00000000000000010000011010100101\"这个代码就OK","timestamp":1590329650947},{"name":"17-git配置.md","path":"0-code环境配置/17-git配置.md","content":"Win10下git的安装与配置\r\n1. 注册。在github上注册一个账号\r\n2. 下载git\r\n安装完成后将安装目录\\cmd\\git.exe加入到系统环境变量 Path 中，打开 cmd 输入 git --version 命令查看一下是否安装成功。\r\n\r\n配置环境变量\r\n右击此电脑 → 属性 → 高级系统设置 → 环境变量 → 在系统变量中找到path，添加 安装目录\\cmd\\git.exe\r\n\r\n安装成功 \r\n\r\n\r\n3. 配置\r\n  打开gitbash，设置你的名字和email,这些是在提交commit时的签名\r\n\r\n  \r\n\r\n  ```shell\r\n  git config --global user.name linruohan\r\n  \r\n  git config --global user.email \"mjt1220@126.com\"\r\n  ```\r\n\r\n生成ssh-key\r\n\r\n```\r\nmkdir ~/.ssh && cd ~/.ssh && ssh-keygen -t rsa -C \"mjt1220@126.com\"\r\n```\r\n\r\n4. 连接客户端与github\r\n这里以github为例，可以根据实际情况连接不同的服务器。\r\n打开github\r\nsetting → SSH and GPG keys → New SSH key\r\n\r\ntitle可以自定义，用文本编辑器打开id_rsa.pub将里面的内容复制到key \r\n，Add SSH key。\r\n\r\n连接完毕\r\n------------------------------------------------\r\n版权声明：本文为CSDN博主「yoolemon」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\r\n原文链接：https://blog.csdn.net/lemon_cookie/article/details/79058151","timestamp":1590329650947},{"name":"18-jdk环境变量配置.md","path":"0-code环境配置/18-jdk环境变量配置.md","content":"| JAVA_HOME     | C:\\Program Files\\Java\\jdk1.8.0_181                           |      |\r\n| ------------- | ------------------------------------------------------------ | ---- |\r\n| CLASSPATH     | .;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar                  |      |\r\n| PATH          | %JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;                         |      |\r\n| java -version | ![JDK安装与环境变量配置](D:\\Typora_pic\\9f2f070828381f30d18e5a5ca9014c086f06f0b4-1577201370581.jpg) |      |\r\n\r\n","timestamp":1590329650947},{"name":"19-microsoft visual c++ 14.0 is requied .md","path":"0-code环境配置/19-microsoft visual c++ 14.0 is requied .md","content":"microsoft visual c++ 14.0 is required问题解决办法\r\n先天零魂力 发布于2018-09-20 20:30:27  收藏\r\n展开\r\n\r\n因为提示需要c++ 14.0，下载14.0.\r\n\r\n点击链接：https://pan.baidu.com/s/1ARpvCZGTxXuBkAUINWA6TQ 密码：3t35\r\n进入下载。\r\n\r\n","timestamp":1590329650947},{"name":"20-test.md","path":"0-code环境配置/20-test.md","content":"# 介绍\r\n\r\n# wangEditor\r\n\r\n## 介绍\r\n\r\n**wangEditor** —— 轻量级 web 富文本编辑器，配置方便，使用简单。支持 IE10+ 浏览器。\r\n\r\n- 官网：[www.wangEditor.com](http://www.wangeditor.com/)\r\n- 文档：[www.kancloud.cn/wangfupeng/wangeditor3/332599](http://www.kancloud.cn/wangfupeng/wangeditor3/332599)\r\n- 源码：[github.com/wangfupeng1988/wangEditor](https://github.com/wangfupeng1988/wangEditor) （欢迎 star）\r\n\r\n![图片](http://images2015.cnblogs.com/blog/138012/201705/138012-20170530202905633-1840158981.png)\r\n\r\n*查看 v2 版本的代码和文档点击[这里](https://github.com/wangfupeng1988/wangEditor/tree/v2)*\r\n\r\n## 下载\r\n\r\n- 直接下载：https://github.com/wangfupeng1988/wangEditor/releases\r\n- 使用`npm`下载：`npm install wangeditor` （注意 `wangeditor` 全部是**小写字母**）\r\n- 使用`bower`下载：`bower install wangEditor` （前提保证电脑已安装了`bower`）\r\n- 使用CDN：[//unpkg.com/wangeditor/release/wangEditor.min.js](https://unpkg.com/wangeditor/release/wangEditor.min.js)\r\n\r\n## 使用\r\n\r\n```\r\nvar E = window.wangEditor\r\nvar editor2 = new E(\'#div3\')\r\neditor2.create()\r\n```\r\n\r\n## 运行 demo\r\n\r\n- 下载源码 `git clone git@github.com:wangfupeng1988/wangEditor.git`\r\n- 安装或者升级最新版本 node（最低`v6.x.x`）\r\n- 进入目录，安装依赖包 `cd wangEditor && npm i`\r\n- 安装包完成之后，windows 用户运行`npm run win-example`，Mac 用户运行`npm run example`\r\n- 打开浏览器访问[localhost:3000/index.html](http://localhost:3000/index.html)\r\n- 用于 React 或者 vue 可查阅[文档](http://www.kancloud.cn/wangfupeng/wangeditor3/332599)中“其他”章节中的相关介绍\r\n\r\n## 交流\r\n\r\n### QQ 群\r\n\r\n以下 QQ 群欢迎加入交流问题（可能有些群已经满员）\r\n\r\n- 164999061\r\n- 710646022\r\n\r\n### 提问\r\n\r\n注意，作者只受理以下几种提问方式，其他方式直接忽略\r\n\r\n- 直接在 [github issues](https://github.com/wangfupeng1988/wangEditor/issues) 提交问题\r\n- 去[知乎](https://www.zhihu.com/)提问，并邀请[作者](https://www.zhihu.com/people/wang-fu-peng-54/activities)来回答\r\n- 去[segmentfault](https://segmentfault.com/)提问，并邀请[作者](https://segmentfault.com/u/wangfupeng1988)来回答\r\n\r\n每次升级版本修复的问题记录在[这里](https://www.kancloud.cn/wangfupeng/wangeditor3/ISSUE.md)\r\n\r\n## 关于作者\r\n\r\n- 关注作者的博客 - 《[深入理解javascript原型和闭包系列](http://www.cnblogs.com/wangfupeng1988/p/4001284.html)》《[深入理解javascript异步系列](https://github.com/wangfupeng1988/js-async-tutorial)》《[换个思路学习nodejs](https://github.com/wangfupeng1988/node-tutorial)》《[CSS知多少](http://www.cnblogs.com/wangfupeng1988/p/4325007.html)》\r\n\r\n![图片](D:\\Typora_pic\\687474703a2f2f696d61676573323031352e636e626c6f67732e636f6d2f626c6f672f3133383031322f3230313730322f3133383031322d32303137303232383131323233373739382d313530373139363634332e706e67.png)","timestamp":1590329650947},{"name":"21-vscode sync 同步插件使用.md","path":"0-code环境配置/21-vscode sync 同步插件使用.md","content":"# gist.github.com 无法访问解决办法\r\n\r\n```shell\r\n编辑C:\\Windows\\System32\\drivers\\etc\\hosts 在最后一行添加：\r\n\r\n192.30.253.118 gist.github.com\r\n```\r\n\r\n## [![返回主页](https://www.cnblogs.com/skins/custom/images/logo.gif)](https://www.cnblogs.com/lychee/)\r\n\r\n# [Lychee\'s Blog](https://www.cnblogs.com/lychee/)https://www.cnblogs.com/lychee/p/11214032.html#903404552)\r\n\r\n==Settings Sync可以同步你当前的VSCode配置环境==，当你需要在其它的电脑工作时，您不用重头再来一遍。新机器登录一下就搞定了。再也不用折腾环境了。\r\n\r\n大致原理：使用GitHub Gist来同步多台计算机上的设置，代码段，主题，文件图标，启动，键绑定，工作区和扩展。\r\n\r\n## 环境版本：[#](https://www.cnblogs.com/lychee/p/11214032.html#2379894430)\r\n\r\nVisual Studio Code 1.36\r\n\r\nSettings Sync 3.4.0\r\n\r\n## 初次使用：\r\n\r\n在VSCode中点击扩展，搜索：**Settings Sync** 安装\r\n\r\n![image-20191214090849568](F:\\Typora_book\\typora_pic\\image-20191214090849568.png)\r\n\r\n安装好扩展之后我们**登录GitHub开通并创建一个Gist**（代码片段管理服务）来保存你的环境配置。\r\n\r\n登录你的Github 点击头像 进入**Settings**页面\r\n\r\n在Settings页面点击进入 **Developer settings** （开发者设置）再点击进入**Personal access tokens** （个人授权令牌）页面生成一个令牌 点击 **Generate new token**\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d313635226a177061.png)\r\n\r\n令牌的作用能帮助我们就在VSCode中使用自己的私有令牌访问自己的保存在Gist上的配置\r\n\r\n所以我们输入令牌备注，勾选Gist，点击生成。\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d3136a7d65f531129.png)\r\n\r\n然后你就获得了自己的Gist专属访问令牌，你可以用记事本保存下来，待会并且未来你可能需要在另一台电脑下载你的配置 你同样需要使用到这个令牌。（截图中生成Token演示后删除，请自己生成）\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d3136e320a0b54947.png)\r\n\r\n然后再次点击你的头像 点击进入->Gist页面 点击**创建一个新Gist**。\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d313c6642f9569479.png)\r\n\r\n输入创建的Gist描述和片段内容，保存即可。\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d313cce374fc30585.png)\r\n\r\n手动复制刚才创建的Gist仓库的ID：它显示在浏览器url最后一串字符串或者截图中第二个框gist冒号后面的字符串（如下图）把它保存在你的记事本中\r\n\r\n![image-20191214091458645](F:\\Typora_book\\typora_pic\\image-20191214091458645.png)\r\n\r\n回到VSCode编辑器中 使用快捷键`Ctrl+P` 输入命令 `>sync` 点击 **同步：高级选项**\r\n\r\nps：如果有问题，可以点红框下面的 **扩展设置重置** 它不会清除你现有的扩展，只恢复初始sync的配置） 快捷键的用法是 `Ctrl+P` 输入命令：`>Sync: Reset Extension Settings`\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d31605aab27054134.png)\r\n\r\n然后选择同步：编辑配置设置(截图中文翻译错误)\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d315cdb7819980414.png)\r\n\r\n输入你在github上创建的gist token 记得使用`Ctrl+S`保存更改\r\n\r\n![image-20191214093548679](F:\\Typora_book\\typora_pic\\image-20191214093548679.png)\r\n\r\nctrl + shift+p 打开命令输入：sync\r\n\r\n![image-20191214093643006](F:\\Typora_book\\typora_pic\\image-20191214093643006.png)\r\n\r\n输入创建的Gist仓库ID 输入自动保存设置\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d315fba63ab391573.png)\r\n\r\n使用Settings Sync我们需要记住两个快捷键：\r\n\r\n`Shift + Alt + U` 将配置环境 扩展插件信息上传到云端\r\n\r\n`Shift + Alt + D` 下载云端的配置\r\n\r\n你还可以在你的==Gist仓库中==查看，看看Settings Sync上传了什么\r\n\r\n![img](F:\\Typora_book\\typora_pic\\5d3165a022f2664570.png)\r\n\r\n\r\n\r\n\r\n\r\n快捷键Shift+Alt+D 下载配置\r\n\r\n同步成功 需要**重启**VSCode\r\n\r\n### 1、扩展设置重置[#](https://www.cnblogs.com/lychee/p/11214032.html#4036351607)\r\n\r\n它不会清除你现有的扩展，只恢复初始sync的配置） 快捷键的用法是 Ctrl+P 输入命令：`>Sync: Reset Extension Settings`\r\n\r\n### 2、更改Settings Sync配置文本[#](https://www.cnblogs.com/lychee/p/11214032.html#4163084651)\r\n\r\n设置Token ID\r\n\r\n### 3、设置Gist ID[#](https://www.cnblogs.com/lychee/p/11214032.html#551013439)\r\n\r\n然后同步上传或者下载配置。\r\n\r\n==token:\tb97c1f7365e6de46231dbc8fb0835eaf1f35a8ff==\r\n\t\t==gist:\t660ebe88f68d8e9e2ce87863e853c932==","timestamp":1590329650947},{"name":"22-vscode配置c#debug环境.md","path":"0-code环境配置/22-vscode配置c#debug环境.md","content":"vscode调试运行c#详细操作过程\r\n\r\n```shell\r\n#路径跳转\r\ncd\r\n#新建项目\r\ndotnet new console -o 路径\r\n#//运行\r\ndotnet run\r\n#//用于发布exe\r\n<RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n#//在项目根目录执行命令运行程序 :\r\ndotnet run -p ceshi002.csproj\r\n#发布exe :\r\ndotnet publish ceshi002.csproj\r\n```\r\n\r\n1. 安装 .NET Core SDK.  [.NET Core SDK下载](https://www.microsoft.com/net/learn/get-started/windows#create)\r\n2. 安装Visual Studio Code.[Visual Studio Code.下载](https://code.visualstudio.com/docs?start=true)\r\n\r\n3. 安装 C# extension 在VSCode市场中有，直接搜索即可.\r\n\r\n4. 首先用cmd试试创建C#程序与运行\r\n\r\n- 1.快捷键：win+R\r\n- 2.输入dotnet -h查看帮助：\r\n\r\n- 3.在任意地方指定一个项目文件夹：\r\n\r\n- 4.然后在cmd中用命令指定到路径新建项目：\r\n\r\n```shell\r\ndotnet new console -o D:\\c#cmd测试\\myceshi001\r\n```\r\n\r\n>\r\n> new 是初始化.NET项目\r\n>\r\n> console 是模板\r\n>\r\n> -o 是要放置生成的输出的位置。\r\n>\r\n> 后面跟路径 D:\\c#cmd测试\\myceshi001\r\n>\r\n> myceshi001是项目的命名\r\n>\r\n\r\n5.此时文件夹中已经创建了myceshi001项目：\r\n\r\n6.cmd中进入项目路径然后尝试运行:\r\n\r\n输入 d: 跳转到d盘\r\n输入 cd 路径 跳转到项目路径\r\n\r\n输入 dotnet run 尝试运行\r\n\r\n成功！！！\r\n\r\n\r\n\r\n7.在cmd中输入type也能查看文件文本内容：\r\n注：输入 help 能查看cmd命令\r\n\r\n\r\n\r\n\r\n5.用vscode创建和运行：\r\n\r\n1.创建个项目文件夹：//这里我创建的是  c#vscode测试\r\n2.打开vscode:\r\n3.在vscode中打开这个文件夹：\r\n快捷键：ctrl+k + ctrl+o\r\n\r\n2.快捷键：ctrl+shifit+y 打开控制台\r\n3.进入终端...\r\n\r\n\r\n2.接下来的创建操作和上面cmd的一样：\r\n敲入代码：\r\ndotnet new console\r\n还原成功！！！\r\n然后文件夹里面就多了点东西\r\n点击打开Program.cs就是你创建的主程序文件了\r\n里面已经默认写了个Hello World程序...\r\n\r\n3.接下来直接按下F5运行！！！\r\n他会让你选择环境运行,点击: .NET Core\r\n\r\n4.等待一段时间后...\r\n跳出一个json文件让你设置？\r\n跳出一个警告：\r\n译：缺少必需的资产构建和调试的c# vscode测试”。加入他们吗?\r\n点击：yes\r\n然后关掉文件就好了\r\n\r\n第一次运行就会这样....\r\n\r\n5.设置好了，接下来再按下F5\r\n等待一段时间后...\r\n成功在调试控制台打印出Hello world!\r\n\r\n\r\n而在终端则显示一些生成信息：\r\n\r\n\r\n\r\n\r\n..........完美运行！！！\r\n\r\n\r\n\r\n6.开始书写自己的程序并调试：\r\n写个例子:\r\n新建了个名为 Name001 的类文件\r\n然后还加了个断点上去\r\n\r\n\r\n然后在main程序里面调用...\r\n\r\n\r\n然后按下F5运行！！！\r\n进入调试页面：\r\n调试断点监视什么的都齐全了！！！\r\n成功输出：Hello World!闪电黑客\r\n\r\n\r\n\r\nvscode运行调试C#的教程完结。。。\r\n\r\n\r\n\r\n最后的最后：\r\n\r\n你应该发现了\r\ndebug里面没有exe文件,只有一个dll?\r\n\r\n\r\n解决办法：\r\n\r\n在项目的 . csproj 文件里面加入这行代码：\r\n\r\n<RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n\r\n然后点击F5运行就可以了：\r\n\r\n注意：生成exe的话 , 编译等待的时间会比较长...\r\n完成后打开文件夹就能看见多了点东西...\r\n\r\n\r\n<RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n\r\n用于最后的exe生成。。。\r\n新的程序都会生成在win10-x64  里面\r\n\r\n不过vscode还是在调试之前的程序 netcoreapp2.1 里面的.dll程序\r\n\r\n不会去调试 win10-x64 这个新路径的\r\n\r\n建议是 确定程序完成 后最加上，用于生成.exe\r\n\r\n//=============================================\r\n\r\n当然你不嫌麻烦的话也可以加多短短的一个路径：\r\n打开.vscode文件夹的launch.json文件\r\n\r\n里面这条：\r\n\r\n```c\r\n\"program\": \"${workspaceFolder}/bin/Debug/netcoreapp2.1/C#vscode测试.dll\",\r\n就是调试路径：在netcoreapp2.1/后面加上win10-x64/,变成：\r\n\"program\": \"${workspaceFolder}/bin/Debug/netcoreapp2.1/win10-x64/C#vscode测试.dll\",\r\n```\r\n\r\n\r\n然后就一点问题都没有了，调试并同时产生新的exe，都在win10-x64里面\r\n","timestamp":1590329650947},{"name":"23-vstudio2019 提高速度.md","path":"0-code环境配置/23-vstudio2019 提高速度.md","content":"visual studio 提高速度的选项\r\n原创张无矩 最后发布于2018-04-01 22:35:03 阅读数 3840  收藏\r\n展开\r\n由于好几年前的笔记本上运行visual studio 2015， 速度变得特别慢，尤其是打开大的解决方案时简直难以忍受。本文记录提升vs2015的一些选项设置。\r\n\r\n1.关掉vs的版本管理（不要把git集成到vs），如果需要管理版本，单独用git或别的软件管理。设置：Tool| Option| Source Control| None\r\n![image-20200328211427788](D:\\Typora_pic\\image-20200328211427788.png)\r\n\r\n2.关掉编辑器的自动调整RAM模式（Auto Tune Max Cached Tranlation Unit），调到最小值2(Max Cached Tranlation Unit).设置：Tool| Option| Text Editor| Advanced| Auto Tune Max Cached Tranlation Unit=False，Max Cached Tranlation Unit=2 .\r\n\r\n![image-20200328211405018](D:\\Typora_pic\\image-20200328211405018.png)\r\n\r\n------------------------------------------------\r\n版权声明：本文为CSDN博主「张无矩」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\r\n原文链接：https://blog.csdn.net/baigalxy/article/details/79782816","timestamp":1590329650947},{"name":"24-vstudio2019.md","path":"0-code环境配置/24-vstudio2019.md","content":"# 通过设置启用 Visual Studio 默认关闭的大量强大的功能提升开发效率\r\n原创置顶 walter lv 最后发布于2019-10-28 09:31:22 阅读数 283  收藏\r\n展开\r\n使用 Visual Studio 开发 C#/.NET 应用程序，以前有 ReSharper 来不足其各项功能短板，后来不断将 ReSharper 的功能一点点搬过来稍微好了一些。不过直到 Visual Studio 2019，才开始渐渐可以和 ReSharper 拼一下了。\r\n\r\n如果你使用 Visual Studio 2019，那么像本文这样配置一下，可以大大提升你的开发效率。\r\n\r\n本文内容\r\n工具选项\r\n文本编辑器\r\nC#\r\nC# 高级\r\n代码样式\r\n人工智能 IntelliCode\r\n快捷键\r\n自动完成\r\n工具选项\r\n打开菜单 “工具” -> “选项”，然后你就打开了 Visual Studio 的选项窗口。接下来本文的所有内容都会在这里进行。\r\n\r\n\r\n\r\n文本编辑器\r\n在 “文本编辑器” -> “常规” 分类中，我们关心这些设置：\r\n\r\n使鼠标单击可执行转到定义 这样按住 Ctrl 键点击标识符的时候可以转到定义（开启此选项之后，后面有其他选项可以转到反编译后的源码）\r\n\r\n\r\n当然也有其他可以打开玩的：\r\n\r\n查看空白 专治强迫症，可以把空白字符都显示出来，这样你可以轻易看到对齐问题以及多于的空格了\r\nC#\r\n在 “文本编辑器” -> “C#” -> “IntelliSense” 分类中，我们关心这些设置：\r\n\r\n键入字符后显示完成列表 删除字符后显示完成列表 突出显示完成列表项的匹配部分 显示完成项筛选器 打开这些选项可以让智能感知列表更容易显示出来，而我们也知道智能感知列表的强大\r\n推荐 显示 unimported 命名空间中的项(实验) 这一项默认不会勾选，但强烈建议勾选上；它可以帮助我们直接输入没有 using 的命名空间中的类型，这可以避免记住大量记不住的类名\r\n\r\n\r\nC# 高级\r\n在 “文本编辑器” -> “C#” -> “高级” 分类中，我们关心大量设置：\r\n\r\n支持导航到反编译源(实验) 前面我们说可以 Ctrl + 鼠标导航到定义，如果打开了这个就可以看反编译后的源码了\r\n启用可为 null 的引用分析 IDE 功能 这个功能可能还没有完成，暂时还是无法开启的\r\n\r\n\r\n当然也有其他可以打开玩的：\r\n\r\n启用完成解决方案分析 这是基于 Roslyn 的分析，Visual Studio 的大量重构功能都依赖于它；默认关闭也可以用，只是仅分析当前正在编辑的文件；如果打开则分析整个解决方案，你会在错误列表中看到大量的编译警告\r\n代码样式\r\n在 “文本编辑器” -> “C#” -> “代码样式” 分类，如果你关心代码的书写风格，那么这个分类底下的每一个子类别都可以考虑一个个检查一下。\r\n\r\n\r\n\r\n人工智能 IntelliCode\r\nVisual Studio 2019 默认安装了 IntelliCode 可以充分利用微软使用 GitHub 上开源项目训练出来的模型来帮助编写代码。这些强烈建议开启。\r\n\r\nC# 基础模型 微软利用 GitHub 开源项目训练的基础模型\r\nXAML 基础模型 微软利用 GitHub 开源项目训练的基础模型\r\nC# 参数完成\r\nC# 自定义模型 如果针对单个项目训练出来了模型，那么可以使用专门针对此项目训练的模型\r\nEditorConfig 推理 可以根据项目推断生成 EditorConfig 文件 可以参见在 Visual Studio 中使用 EditorConfig 统一代码风格\r\n自定义模型训练提示 如果开启，那么每个项目的规模如果达到一定程度就会提示训练一个自定义模型出来\r\n\r\n\r\n\r\n\r\n训练模型会上传一部分数据到 IntelliCode 服务器，你可以去 %TEMP%\\Visual Studio IntelliCode 目录来查看到底上传了哪些数据。\r\n\r\n快捷键\r\n当然，设置好快捷键也是高效编码的重要一步，可以参考：\r\n\r\n如何快速自定义 Visual Studio 中部分功能的快捷键\r\n提高使用 Visual Studio 开发效率的键盘快捷键\r\n自动完成\r\n在你点击 “确定” 关闭了以上窗口之后，我们还需要设置一项。\r\n\r\n确保下图中的这个按钮处于 “非选中” 状态：\r\n\r\n\r\n\r\n这样，当出现智能感知列表的时候，我们直接就可以按下回车键输入这个选项了；否则你还需要按上下选中再回车。\r\n\r\n\r\n\r\n我的博客会首发于 https://blog.walterlv.com/，而 CSDN 会从其中精选发布，但是一旦发布了就很少更新。\r\n\r\n如果在博客看到有任何不懂的内容，欢迎交流。我搭建了 dotnet 职业技术学院 欢迎大家加入。\r\n\r\n\r\n\r\n本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。欢迎转载、使用、重新发布，但务必保留文章署名吕毅（包含链接：https://walterlv.blog.csdn.net/），不得用于商业目的，基于本文修改后的作品务必以相同的许可发布。如有任何疑问，请与我联系。\r\n\r\n------------------------------------------------\r\n版权声明：本文为CSDN博主「walter lv」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\r\n原文链接：https://blog.csdn.net/WPwalter/java/article/details/102775655","timestamp":1590329650947},{"name":"25-安装pyqt5.md","path":"0-code环境配置/25-安装pyqt5.md","content":"# [PyQt\\]在Windows系统中安装PyQt5](https://www.cnblogs.com/syh6324/p/9484208.html)\r\n\r\n##### 1. 安装PyQt5\r\n`pip install PyQt5`\r\n`pip install PyQt5 -i https://pypi.douban.com/simple`\r\n`pip install PyQt5-tools`\r\n`pip install PyQt5-tools -i https://pypi.douban.com/simple`\r\n\r\n##### 3. 将PyQt5-tools的安装目录添加到系统环境变量Path中。\r\n\r\n- 在桌面上右键单击“我的电脑”，在弹出的快捷菜单中选择“属性”->“高级系统设置”->“高级”，单击环境变量按钮，在系统变量Path中添加pyqt5-tools目录的绝对路径。\r\n- 在Windows命令行输入Path命令。如果一切正常，则会在返回的Path路径中看到刚才配置的路径。\r\n\r\n##### 4. 编写测试文件测试是否安装成功。代码如下：\r\n\r\n```\r\nimport sys\r\nfrom PyQt5.QtWidgets import QWidget, QApplication\r\n\r\napp = QApplication(sys.argv)\r\nwidget = QWidget()\r\nwidget.resize(640, 480)\r\nwidget.setWindowTitle(\"Hello, PyQt5!\")\r\nwidget.show()\r\nsys.exit(app.exec())\r\n```","timestamp":1590329650947}]